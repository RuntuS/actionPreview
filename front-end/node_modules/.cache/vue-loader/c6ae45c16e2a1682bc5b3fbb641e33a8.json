{"remainingRequest":"D:\\actionPreview\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\actionPreview\\front-end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\actionPreview\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\actionPreview\\front-end\\src\\components\\indexPage\\pubAction.vue?vue&type=template&id=a80c05b6&scoped=true&","dependencies":[{"path":"D:\\actionPreview\\front-end\\src\\components\\indexPage\\pubAction.vue","mtime":1581768923749},{"path":"D:\\actionPreview\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\actionPreview\\front-end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\actionPreview\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\actionPreview\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}